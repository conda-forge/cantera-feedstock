{% set version = "3.1.0a4" %}

package:
  name: cantera-recipe
  version: {{ version }}

source:
  - url: https://github.com/Cantera/cantera/archive/v{{ version }}.tar.gz
    sha256: 58f4417b8fde503e6bd9a4896859883e81cc228af36eeb09fbaf61e9f1f45699
  - url: https://github.com/Cantera/cantera-example-data/archive/dbc42129c998c3a977dfa2a8b779851776fb2982.tar.gz
    sha256: 4e282ce75354566e344b2d23d4b1c4574d781fe3aa3682baea4a31dff66aa293
    folder: data/example_data

build:
  number: 0
  include_recipe: True

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - {{ compiler('c') }}
    - {{ stdlib("c") }}
    - {{ compiler('cxx') }}
    - scons >=4.1
    - setuptools
  host:
    - python >=3.8
    - libboost-devel
    - numpy
    - fmt
    - eigen
    - yaml-cpp
    - sundials ==7.0.0
    - hdf5 >=1.14
    - highfive >=2.7
    - pywin32  # [win]
    - libblas
    - liblapack

outputs:
  - name: libcantera
    script: build_lib.sh  # [not win]
    script: build_lib.bat  # [win]
    build:
      ignore_run_exports_from:
        # only the header part of these libraries are used
        - libboost-headers
        - python
    requirements:
      build:
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - {{ compiler('cxx') }}
        - scons >=4.1
        - setuptools
      host:
        - python >=3.8
        - libboost-headers
        - numpy
        - fmt
        - eigen
        - yaml-cpp
        - sundials ==7.0.0
        - hdf5 >=1.14
        - highfive >=2.7
        - pywin32  # [win]
        - libblas
        - liblapack
      run:
        - hdf5 >=1.14
    test:
      commands:
        - echo "STARTING TESTS"
        - cat ${CONDA_PREFIX}/conda-meta/libcantera-3.*.json  # [not win]
        - type %CONDA_PREFIX%\conda-meta\libcantera-3.*.json  # [win]
        - test -f $PREFIX/lib/libcantera${SHLIB_EXT}  # [not win]

  - name: libcantera-devel
    script: build_devel.sh  # [not win]
    script: build_devel.bat  # [win]
    build:
      ignore_run_exports_from:
        # only the header part of these libraries are used
        - libboost-headers
        - python
    requirements:
      build:
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - {{ compiler('cxx') }}
        - scons >=4.1
        - setuptools
      host:
        - python >=3.8
        - setuptools
        - pip
        - libboost-headers
        - numpy
        - fmt
        - eigen
        - yaml-cpp
        - sundials ==7.0.0
        - pywin32  # [win]
        - libcantera =={{ version }}
        - libblas
        - liblapack
      run:
        - eigen
        - fmt
        - libcantera =={{ version }}
    test:
      requires:
        - cmake
        - make  # [not win]
        - scons
        - pkgconfig
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - numpy
        - python {{ python }}
      files:
        - test-lib
      commands:
        - cat ${CONDA_PREFIX}/conda-meta/libcantera-devel-*.json  # [not win]
        - type %CONDA_PREFIX%\conda-meta\libcantera-devel-*.json  # [win]
        - test -f $PREFIX/include/cantera/transport.h  # [not win]
        - ./test-lib/test-samples.sh  # [not win and build_platform == target_platform]
        - call test-lib\test-samples.bat  # [win]

  - name: cantera
    script: build_py.sh  # [not win]
    script: build_py.bat  # [win]
    build:
      ignore_run_exports_from:
        # only the header part of these libraries are used
        - libboost-headers
    requirements:
      build:
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - {{ compiler('cxx') }}
        - scons >=4.1
        - setuptools
        - numpy                                  # [build_platform != target_platform]
        - cython                                 # [build_platform != target_platform]
        - pip
      host:
        - python {{ python }}
        - pip
        - setuptools
        - libboost-headers
        - numpy
        - fmt
        - eigen
        - yaml-cpp
        - sundials ==7.0.0
        - pywin32  # [win]
        - cython
        # These two are added here so that conda-build doesn't package their files into cantera too
        - libcantera-devel =={{ version }}
        - libcantera =={{ version }}
        - libblas
        - liblapack
      run:
        - python
        - ruamel.yaml
        - libcantera =={{ version }}
    build:
      entry_points:
        - ck2yaml = cantera.ck2yaml:main
        - cti2yaml = cantera.cti2yaml:main
        - ctml2yaml = cantera.ctml2yaml:main
        - yaml2ck = cantera.yaml2ck:main
      include_recipe: True
    test:
      requires:
        - pytest
        - pint
        - libcantera-devel =={{ version }}
        - cmake
        - make  # [not win]
        - scons
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
      imports:
        - cantera
      source_files:
        - test/python
        - test/data
        - data
      files:
        - test-lib
      commands:
        - cat ${CONDA_PREFIX}/conda-meta/cantera-*.json  # [not win]
        - type %CONDA_PREFIX%\conda-meta\cantera-*.json  # [win]
        - uname -a  # [not win]
        - python -c "import platform; print('Python platform:', platform.platform())"
        - python -m pytest -vv test/python  # [not ppc64le]
        # "test_fluxes" fails on ppc64le for unknown reasons
        - python -m pytest -vv test/python -k "not test_fluxes"  # [ppc64le]
        - cti2yaml --help
        - ck2yaml --help
        - ctml2yaml --help
        - yaml2ck --help
        - ./test-lib/test-extensiblerate.sh  # [not win and build_platform == target_platform and not (osx and x86_64 and py == 310)]
        - call test-lib\test-extensiblerate.bat  # [win]

about:
  home: https://cantera.org
  summary: "Chemical kinetics, thermodynamics, and transport tool suite"
  license: BSD-3-Clause
  license_family: BSD
  license_file: License.txt
  dev_url: https://github.com/cantera/cantera
  description: Cantera is an open-source suite of tools for problems involving chemical kinetics, thermodynamics, and transport processes
  doc_url: https://cantera.org/documentation

extra:
  feedstock-name: cantera
  recipe-maintainers:
    - inducer
    - bryanwweber
    - matthiasdiener
